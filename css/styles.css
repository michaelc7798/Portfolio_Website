/*
Colors used

Text Color (Saturated Blue): #000;
Backgrond Color (White): #fff;
Visited links (Saturated blue): #638bb3;
*/
:root {
  --background-color: #fff;
  --text-color: #000;
  --visited-color: #638bb3;
  --tertiary-color: #ffd166;
  --button-color: #357b70;
  --secondary-button-color: #e0b354;
  --grid-background-color: #d3d3d3;
}

* {
  box-sizing: border-box;

  /* force the padding and border to be included in the final specified width rather than being added on top */
}

body {
  background-color: var(--background-color);
  color: var(--text-color);
  font-family: "Lora", sans-serif;
  font-weight: 400;
  font-size: 16px;

  /* Sets the font size to 16px */
  line-height: 1.6;

  /* Sets the line-height to 1.6 */
}

h1 {
  font-size: 30px;
  font-weight: 700;
}

h2 {
  font-size: 24px;
  font-weight: 700;
}

h3 {
  font-size: 18px;
  font-weight: 700;
}

a {
  color: var(--primary-color);
}

a:visited {
  /*  Pseudo-classes... visited link */
  color: var(--visited-color);
}

a:hover,
a:focus {
  /* No underlining when hovering over a link (a:hover MUST come after a:visited) */

  text-decoration: none;
}

a:active {
  color: var(--tertiary-color);
}

button,
.button {
  /* overwrites browser defaults and resets the border */
  border: none;

  /* takes font from outer container */
  display: inline-block;
  font-family: inherit;
  background-color: var(--button-color);
  color: white;
  text-decoration: none;

  /* adds spacing to the button (bt text and border) */
  padding: 10px;

  /* Rounds the button */
  border-radius: 3px;

  /* gives the button a bottom border with a width of 2px, a type of solid, and a color in RGBA format */
  border-bottom: 2px solid rgba(0, 0, 0, 0.3);
  transition: opacity 0.9s;
}

button:hover,
button:focus,
.button:hover,
.button:focus {
  cursor: pointer;

  /* reduces the opacity of the button to 80% */
  opacity: 0.8;
}

.button_secondary {
  /* When referring to classes, prefix with a period */
  background-color: var(--secondary-button-color);
  color: var(--text-color);
}

.navigation-list,
.enjoy {
  list-style-type: none;
}

.navigation-list li {
  display: inline-block;
  margin-left: 15px;
}

.navigation-list__item--active {
  text-decoration: none;
}

.profile__portrait {
  float: left;
  width: 250px;
  margin-right: 40px;
  border-radius: 50%;
}

.profile,
.about {
  max-width: 700px;
  margin: 0 auto;
  text-align: center;
}

.page-footer {
  clear: both;

  /* Clears prior float values */
  display: flex;

  /* flexible box layout- single dimension layout */
  flex-direction: column;
  text-align: center;
}

.page-header {
  display: flex;
  width: 100%;
  padding: 20px;
}

.page-header__item {
  flex: 0 1 200px;
}

.page-header__item:last-child {
  /* Takes last child of div and right aligns it with flex-grow of 1 */
  flex-grow: 1;
  text-align: right;
}

/* start grid fallback */
.grid__item {
  display: inline-block;
  width: 33%;
}

/* end grid fallback */

@supports (display: grid) {
  .grid {
    display: grid;

    /* grid-template-columns: 300px 300px 300px; fractions are better than pixels - they are responsive */
    grid-template-columns: 1fr 1fr 1fr;
    grid-gap: 20px;
    margin: 0;
  }

  .grid__item {
    background-color: var(--grid-background-color);
    width: auto;
    min-height: auto;
    margin: 0;
  }

  .grid__item:last-child {
    grid-column: 3 / 3;
    grid-row: 1 / 3;
  }
}

@media all and (max-width: 500px) {
  .grid {
    grid-template-columns: 1fr;
  }
}

@media all and (min-width: 500px) and (max-width: 750px) {
  .grid {
    grid-template-columns: 1fr 1fr;
  }
}

@media all and (max-width: 750px) {
  .grid {
    grid-gap: 10px;
  }

  .grid__item:last-child {
    grid-column: auto / auto;
    grid-row: auto / auto;
  }

  h1 {
    font-size: 22px;
  }
}

@keyframes color-change {
  0% {
    fill: #edc655;
  }

  50% {
    fill: #fcffad;
  }

  100% {
    fill: #f76414;
  }
}

.sun {
  animation: 4s color-change infinite alternate linear;
}

@keyframes cloud-move {
  0% {
    transform: translate(0, 50px);
  }

  100% {
    transform: translate(200px, 50px);
  }
}

.cloud-front {
  animation-duration: 30s;
  animation-name: cloud-move;
  animation-iteration-count: infinite;
  animation-direction: alternate;
  animation-timing-function: linear;
}

@keyframes cloud-move-reverse {
  from {
    transform: translate(446px, 48px);
  }

  to {
    transform: translate(100px, 48px);
  }
}

.cloud-back {
  animation: 34s cloud-move-reverse infinite alternate linear;
}
